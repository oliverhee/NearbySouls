{"ast":null,"code":"var _jsxFileName = \"/Users/guoqinghe/Desktop/LaiOffer/around-web/src/components/Home.js\";\nimport React from 'react';\nimport { Tabs, Spin, Row, Col, Button } from 'antd';\nimport { GEO_OPTIONS, POS_KEY, API_ROOT, AUTH_HEADER, TOKEN_KEY, POST_TYPE_IMAGE, POST_TYPE_VIDEO, POST_TYPE_UNKNOWN } from '../constants';\nimport Gallery from './Gallery';\nimport CreatePostButton from './CreatePostButton';\nimport AroundMap from \"./AroundMap\";\nconst {\n  TabPane\n} = Tabs;\n\nclass Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoadingGeoLocation: false,\n      isLoadingPosts: false,\n      error: '',\n      posts: []\n    };\n\n    this.onSuccessLoadGeoLocation = position => {\n      console.log(position);\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      localStorage.setItem(POS_KEY, JSON.stringify({\n        lat: latitude,\n        lon: longitude\n      }));\n      this.setState({\n        isLoadingGeoLocation: false,\n        error: ''\n      });\n      this.loadNearbyPosts();\n    };\n\n    this.onFailedLoadGeoLocation = () => {\n      this.setState({\n        isLoadingGeoLocation: false,\n        error: 'Failed to load geo location.'\n      });\n    };\n\n    this.loadNearbyPosts = () => {\n      const {\n        lat,\n        lon\n      } = JSON.parse(localStorage.getItem(POS_KEY));\n      const token = localStorage.getItem(TOKEN_KEY);\n      this.setState({\n        isLoadingPosts: true,\n        error: ''\n      });\n      return fetch(`${API_ROOT}/search?lat=${lat}&lon=${lon}&range=20000`, {\n        method: 'GET',\n        headers: {\n          Authorization: `${AUTH_HEADER} ${token}`\n        }\n      }).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error('Failed to load post.');\n      }).then(data => {\n        // console.log(data);\n        this.setState({\n          posts: data ? data : [],\n          isLoadingPosts: false\n        });\n      }).catch(e => {\n        console.error(e);\n        this.setState({\n          isLoadingPosts: false,\n          error: e.message\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    // console.log(navigator.geolocation);\n    if (\"geolocation\" in navigator) {\n      this.setState({\n        isLoadingGeoLocation: true,\n        error: ''\n      });\n      navigator.geolocation.getCurrentPosition(this.onSuccessLoadGeoLocation, this.onFailedLoadGeoLocation, GEO_OPTIONS);\n    } else {\n      this.setState({\n        error: 'Geolocation is not supported.'\n      });\n    }\n  }\n\n  renderImagePosts() {\n    const {\n      posts\n    } = this.state;\n    const images = posts.filter(post => post.type === POST_TYPE_IMAGE).map(post => {\n      return {\n        user: post.user,\n        src: post.url,\n        thumbnail: post.url,\n        caption: post.message,\n        thumbnailWidth: 400,\n        thumbnailHeight: 300\n      };\n    });\n    return /*#__PURE__*/React.createElement(Gallery, {\n      images: images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 16\n      }\n    });\n  }\n\n  renderVideoPosts() {\n    const {\n      posts\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Row, {\n      gutter: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, posts.filter(post => [POST_TYPE_VIDEO, POST_TYPE_UNKNOWN].includes(post.type)).map(post => /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      key: post.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      src: post.url,\n      controls: true,\n      className: \"video-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }, post.user, \": \", post.message))));\n  }\n\n  renderPosts(type) {\n    const {\n      error,\n      isLoadingGeoLocation,\n      isLoadingPosts,\n      posts\n    } = this.state;\n\n    if (error) {\n      return error;\n    } else if (isLoadingGeoLocation) {\n      return /*#__PURE__*/React.createElement(Spin, {\n        tip: \"Loading geo location...\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 20\n        }\n      });\n    } else if (isLoadingPosts) {\n      return /*#__PURE__*/React.createElement(Spin, {\n        tip: \"Loading posts...\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 20\n        }\n      });\n    } else if (posts.length > 0) {\n      return type === POST_TYPE_IMAGE ? this.renderImagePosts() : this.renderVideoPosts();\n    } else {\n      return 'No nearby posts';\n    }\n  }\n\n  render() {\n    const operations = /*#__PURE__*/React.createElement(CreatePostButton, {\n      loadNearbyPosts: this.loadNearbyPosts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 28\n      }\n    });\n    return /*#__PURE__*/React.createElement(Tabs, {\n      tabBarExtraContent: operations,\n      className: \"main-tabs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TabPane, {\n      tab: \"Image Posts\",\n      key: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, this.renderPosts(POST_TYPE_IMAGE)), /*#__PURE__*/React.createElement(TabPane, {\n      tab: \"Video Posts\",\n      key: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, this.renderPosts(POST_TYPE_VIDEO)), /*#__PURE__*/React.createElement(TabPane, {\n      tab: \"Map\",\n      key: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AroundMap, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/guoqinghe/Desktop/LaiOffer/around-web/src/components/Home.js"],"names":["React","Tabs","Spin","Row","Col","Button","GEO_OPTIONS","POS_KEY","API_ROOT","AUTH_HEADER","TOKEN_KEY","POST_TYPE_IMAGE","POST_TYPE_VIDEO","POST_TYPE_UNKNOWN","Gallery","CreatePostButton","AroundMap","TabPane","Home","Component","state","isLoadingGeoLocation","isLoadingPosts","error","posts","onSuccessLoadGeoLocation","position","console","log","latitude","longitude","coords","localStorage","setItem","JSON","stringify","lat","lon","setState","loadNearbyPosts","onFailedLoadGeoLocation","parse","getItem","token","fetch","method","headers","Authorization","then","response","ok","json","Error","data","catch","e","message","componentDidMount","navigator","geolocation","getCurrentPosition","renderImagePosts","images","filter","post","type","map","user","src","url","thumbnail","caption","thumbnailWidth","thumbnailHeight","renderVideoPosts","includes","renderPosts","length","render","operations"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { Tabs, Spin, Row, Col, Button } from 'antd';\nimport {\n    GEO_OPTIONS,\n    POS_KEY,\n    API_ROOT,\n    AUTH_HEADER,\n    TOKEN_KEY,\n    POST_TYPE_IMAGE,\n    POST_TYPE_VIDEO,\n    POST_TYPE_UNKNOWN,\n} from '../constants';\n\nimport Gallery from './Gallery';\nimport CreatePostButton from './CreatePostButton';\nimport AroundMap from \"./AroundMap\";\n\nconst { TabPane } = Tabs;\n\nclass Home extends React.Component {\n    state = {\n        isLoadingGeoLocation: false,\n        isLoadingPosts: false,\n        error: '',\n        posts: [],\n    }\n\n    componentDidMount() {\n        // console.log(navigator.geolocation);\n        if (\"geolocation\" in navigator) {\n            this.setState({ isLoadingGeoLocation: true, error: '' });\n            navigator.geolocation.getCurrentPosition(\n                this.onSuccessLoadGeoLocation,\n                this.onFailedLoadGeoLocation,\n                GEO_OPTIONS,\n            );\n        } else {\n            this.setState({ error: 'Geolocation is not supported.'});\n        }\n    }\n\n    onSuccessLoadGeoLocation = (position) => {\n        console.log(position);\n        const { latitude, longitude } = position.coords;\n        localStorage.setItem(POS_KEY, JSON.stringify({ lat: latitude, lon: longitude }));\n        this.setState({ isLoadingGeoLocation: false, error: '' });\n        this.loadNearbyPosts();\n    }\n\n    onFailedLoadGeoLocation = () => {\n        this.setState({ isLoadingGeoLocation: false, error: 'Failed to load geo location.' });\n    }\n\n    loadNearbyPosts = () => {\n        const { lat, lon } = JSON.parse(localStorage.getItem(POS_KEY));\n        const token = localStorage.getItem(TOKEN_KEY);\n        this.setState({ isLoadingPosts: true, error: '' });\n        return fetch(`${API_ROOT}/search?lat=${lat}&lon=${lon}&range=20000`, {\n            method: 'GET',\n            headers: {\n                Authorization: `${AUTH_HEADER} ${token}`\n            }\n        })\n            .then((response) => {\n                if (response.ok) {\n                    return response.json();\n                }\n                throw new Error('Failed to load post.');\n            })\n            .then((data) => {\n                // console.log(data);\n                this.setState({ posts: data ? data : [], isLoadingPosts: false });\n            })\n            .catch((e) => {\n                console.error(e);\n                this.setState({ isLoadingPosts: false, error: e.message });\n            });\n    }\n\n    renderImagePosts() {\n        const { posts } = this.state;\n        const images = posts\n            .filter((post) => post.type === POST_TYPE_IMAGE)\n            .map((post) => {\n                return {\n                    user: post.user,\n                    src: post.url,\n                    thumbnail: post.url,\n                    caption: post.message,\n                    thumbnailWidth: 400,\n                    thumbnailHeight: 300,\n                };\n            });\n        return <Gallery images={images}/>\n    }\n\n    renderVideoPosts() {\n        const { posts } = this.state;\n        return (\n            <Row gutter={30}>\n                {\n                    posts\n                        .filter((post) => [POST_TYPE_VIDEO,    POST_TYPE_UNKNOWN].includes(post.type))\n                        .map((post) => (\n                            <Col span={6} key={post.url}>\n                                <video src={post.url} controls={true} className=\"video-block\"/>\n                                <p>{post.user}: {post.message}</p>\n                            </Col>\n                        ))\n                }\n            </Row>\n        );\n    }\n\n    renderPosts(type) {\n        const { error, isLoadingGeoLocation, isLoadingPosts, posts } = this.state;\n        if (error) {\n            return error;\n        } else if (isLoadingGeoLocation) {\n            return <Spin tip=\"Loading geo location...\"/>;\n        } else if (isLoadingPosts) {\n            return <Spin tip=\"Loading posts...\"/>\n        } else if (posts.length > 0) {\n            return type === POST_TYPE_IMAGE ? this.renderImagePosts() : this.renderVideoPosts();\n        } else {\n            return 'No nearby posts';\n        }\n    }\n    render() {\n        const operations = <CreatePostButton loadNearbyPosts={this.loadNearbyPosts}/>;\n\n        return (\n            <Tabs tabBarExtraContent={operations} className=\"main-tabs\">\n                <TabPane tab=\"Image Posts\" key=\"1\">\n                    {this.renderPosts(POST_TYPE_IMAGE)}\n                </TabPane>\n                <TabPane tab=\"Video Posts\" key=\"2\">\n                    {this.renderPosts(POST_TYPE_VIDEO)}\n                </TabPane>\n                <TabPane tab=\"Map\" key=\"3\">\n                    <AroundMap/>\n                </TabPane>\n            </Tabs>\n        );\n    }\n}\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}