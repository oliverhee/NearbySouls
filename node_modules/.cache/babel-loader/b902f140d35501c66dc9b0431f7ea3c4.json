{"ast":null,"code":"var _jsxFileName = \"/Users/guoqinghe/Desktop/Projects/NearbySouls/src/components/CreatePostButton.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button, message } from 'antd';\nimport { API_ROOT, AUTH_HEADER, TOKEN_KEY, POS_KEY } from '../constants';\nimport CreatePostForm from './CreatePostForm';\n\nclass CreatePostButton extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      visible: false,\n      confirmLoading: false\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = () => {\n      console.log('ok');\n      this.form.validateFields((err, values) => {\n        console.log(values);\n\n        if (!err) {\n          const token = localStorage.getItem(TOKEN_KEY);\n          const {\n            lat,\n            lon\n          } = JSON.parse(localStorage.getItem(POS_KEY));\n          const formData = new FormData();\n          formData.set('lat', lat);\n          formData.set('lon', lon);\n          formData.set('message', values.message);\n          formData.set('image', values.image[0].originFileObj);\n          this.setState({\n            confirmLoading: true\n          });\n          fetch(`${API_ROOT}/post`, {\n            method: 'POST',\n            headers: {\n              Authorization: `${AUTH_HEADER} ${token}`\n            },\n            body: formData\n          }).then(response => {\n            if (response.ok) {\n              return this.props.loadNearbyPosts();\n            }\n\n            throw new Error('Failed to create post.');\n          }).then(() => {\n            this.setState({\n              visible: false,\n              confirmLoading: false\n            });\n            this.form.resetFields();\n            message.success('Post created successfully!');\n          }).catch(e => {\n            console.error(e);\n            message.error('Failed to create post.');\n            this.setState({\n              confirmLoading: false\n            });\n          });\n        }\n      });\n    };\n\n    this.handleCancel = () => {\n      console.log('Clicked cancel button');\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.getFormRef = formInstance => {\n      this.form = formInstance;\n    };\n  }\n\n  render() {\n    const {\n      visible,\n      confirmLoading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.showModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \"Create New Post\"), /*#__PURE__*/React.createElement(Modal, {\n      title: \"Create New Post\",\n      visible: visible,\n      onOk: this.handleOk,\n      okText: \"Create\",\n      confirmLoading: confirmLoading,\n      onCancel: this.handleCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CreatePostForm, {\n      ref: this.getFormRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default CreatePostButton;","map":{"version":3,"sources":["/Users/guoqinghe/Desktop/Projects/NearbySouls/src/components/CreatePostButton.js"],"names":["React","Component","Modal","Button","message","API_ROOT","AUTH_HEADER","TOKEN_KEY","POS_KEY","CreatePostForm","CreatePostButton","state","visible","confirmLoading","showModal","setState","handleOk","console","log","form","validateFields","err","values","token","localStorage","getItem","lat","lon","JSON","parse","formData","FormData","set","image","originFileObj","fetch","method","headers","Authorization","body","then","response","ok","props","loadNearbyPosts","Error","resetFields","success","catch","e","error","handleCancel","getFormRef","formInstance","render"],"mappings":"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","sourcesContent":["\nimport React, {Component} from 'react';\nimport { Modal, Button, message } from 'antd';\n\nimport { API_ROOT, AUTH_HEADER, TOKEN_KEY, POS_KEY } from '../constants';\nimport CreatePostForm from './CreatePostForm';\n\n\nclass CreatePostButton extends Component {\n    state = {\n        visible: false,\n        confirmLoading: false,\n    };\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    handleOk = () => {\n        console.log('ok');\n        this.form.validateFields((err, values) => {\n            console.log(values);\n            if (!err) {\n                const token = localStorage.getItem(TOKEN_KEY);\n                const { lat, lon } = JSON.parse(localStorage.getItem(POS_KEY));\n\n                const formData = new FormData();\n                formData.set('lat', lat);\n                formData.set('lon', lon);\n                formData.set('message', values.message);\n                formData.set('image', values.image[0].originFileObj);\n\n                this.setState({ confirmLoading: true });\n                fetch(`${API_ROOT}/post`, {\n                    method: 'POST',\n                    headers: {\n                        Authorization: `${AUTH_HEADER} ${token}`\n                    },\n                    body: formData,\n                })\n                    .then((response) => {\n                        if (response.ok) {\n                            return this.props.loadNearbyPosts();\n                        }\n                        throw new Error('Failed to create post.');\n                    })\n                    .then(() => {\n                        this.setState({ visible: false, confirmLoading: false });\n                        this.form.resetFields();\n                        message.success('Post created successfully!');\n                    })\n                    .catch((e) => {\n                        console.error(e);\n                        message.error('Failed to create post.');\n                        this.setState({ confirmLoading: false });\n                    });\n            }\n        });\n    };\n\n\n    handleCancel = () => {\n        console.log('Clicked cancel button');\n        this.setState({\n            visible: false,\n        });\n    };\n\n    getFormRef = (formInstance) => {\n        this.form = formInstance;\n    }\n\n\n    render() {\n        const { visible, confirmLoading } = this.state;\n        return (\n            <div>\n                <Button type=\"primary\" onClick={this.showModal}>\n                    Create New Post\n                </Button>\n                <Modal\n                    title=\"Create New Post\"\n                    visible={visible}\n                    onOk={this.handleOk}\n                    okText='Create'\n                    confirmLoading={confirmLoading}\n                    onCancel={this.handleCancel}\n                    >\n                    <CreatePostForm ref={this.getFormRef}/>\n\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default CreatePostButton;\n"]},"metadata":{},"sourceType":"module"}