{"ast":null,"code":"var _jsxFileName = \"/Users/guoqinghe/Desktop/Projects/NearbySouls/src/components/AroundMap.js\";\nimport React, { Component } from 'react';\nimport { POS_KEY } from '../constants';\nimport { withScriptjs, withGoogleMap, GoogleMap } from \"react-google-maps\";\nimport AroundMarker from './AroundMarker';\n\nclass NormalAroundMap extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getMapRef = mapInstance => {\n      this.map = mapInstance;\n      window.map = mapInstance;\n    };\n\n    this.reloadMarker = () => {\n      const center = this.getCenter();\n      const radius = this.getRadius();\n      this.props.loadPostsByTopic(center, radius);\n    };\n  }\n\n  getCenter() {\n    const center = this.map.getCenter();\n    return {\n      lat: center.lat(),\n      lon: center.lng()\n    };\n  }\n\n  getRadius() {\n    const center = this.map.getCenter();\n    const bounds = this.map.getBounds();\n\n    if (center && bounds) {\n      const ne = bounds.getNorthEast();\n      const right = new window.google.maps.LatLng(center.lat(), ne.lng());\n      return 0.001 * window.google.maps.geometry.spherical.computeDistanceBetween(center, right);\n    }\n  }\n\n  render() {\n    const {\n      lat,\n      lon\n    } = JSON.parse(localStorage.getItem(POS_KEY));\n    return /*#__PURE__*/React.createElement(GoogleMap, {\n      ref: this.getMapRef,\n      defaultZoom: 11,\n      defaultCenter: {\n        lat,\n        lng: lon\n      },\n      onDragEnd: this.reloadMarker,\n      onZoomChanged: this.reloadMarker,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, this.props.posts.map(post => /*#__PURE__*/React.createElement(AroundMarker, {\n      post: post,\n      key: post.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 49\n      }\n    })));\n  }\n\n}\n\nconst AroundMap = withScriptjs(withGoogleMap(NormalAroundMap));\nexport default AroundMap;","map":{"version":3,"sources":["/Users/guoqinghe/Desktop/Projects/NearbySouls/src/components/AroundMap.js"],"names":["React","Component","POS_KEY","withScriptjs","withGoogleMap","GoogleMap","AroundMarker","NormalAroundMap","getMapRef","mapInstance","map","window","reloadMarker","center","getCenter","radius","getRadius","props","loadPostsByTopic","lat","lon","lng","bounds","getBounds","ne","getNorthEast","right","google","maps","LatLng","geometry","spherical","computeDistanceBetween","render","JSON","parse","localStorage","getItem","posts","post","url","AroundMap"],"mappings":";AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,SACIC,YADJ,EAEIC,aAFJ,EAGIC,SAHJ,QAIO,mBAJP;AAMA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,eAAN,SAA8BN,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAEpCO,SAFoC,GAEvBC,WAAD,IAAiB;AACzB,WAAKC,GAAL,GAAWD,WAAX;AACAE,MAAAA,MAAM,CAACD,GAAP,GAAaD,WAAb;AACH,KALmC;;AAAA,SAOpCG,YAPoC,GAOrB,MAAM;AACjB,YAAMC,MAAM,GAAG,KAAKC,SAAL,EAAf;AACA,YAAMC,MAAM,GAAG,KAAKC,SAAL,EAAf;AACA,WAAKC,KAAL,CAAWC,gBAAX,CAA4BL,MAA5B,EAAoCE,MAApC;AACH,KAXmC;AAAA;;AAapCD,EAAAA,SAAS,GAAG;AACR,UAAMD,MAAM,GAAG,KAAKH,GAAL,CAASI,SAAT,EAAf;AACA,WAAO;AAAEK,MAAAA,GAAG,EAAEN,MAAM,CAACM,GAAP,EAAP;AAAqBC,MAAAA,GAAG,EAAEP,MAAM,CAACQ,GAAP;AAA1B,KAAP;AACH;;AAEDL,EAAAA,SAAS,GAAG;AACR,UAAMH,MAAM,GAAG,KAAKH,GAAL,CAASI,SAAT,EAAf;AACA,UAAMQ,MAAM,GAAG,KAAKZ,GAAL,CAASa,SAAT,EAAf;;AACA,QAAIV,MAAM,IAAIS,MAAd,EAAsB;AAClB,YAAME,EAAE,GAAGF,MAAM,CAACG,YAAP,EAAX;AACA,YAAMC,KAAK,GAAG,IAAIf,MAAM,CAACgB,MAAP,CAAcC,IAAd,CAAmBC,MAAvB,CAA8BhB,MAAM,CAACM,GAAP,EAA9B,EAA4CK,EAAE,CAACH,GAAH,EAA5C,CAAd;AACA,aAAO,QAAQV,MAAM,CAACgB,MAAP,CAAcC,IAAd,CAAmBE,QAAnB,CAA4BC,SAA5B,CAAsCC,sBAAtC,CAA6DnB,MAA7D,EAAqEa,KAArE,CAAf;AACH;AACJ;;AAEDO,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEd,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAec,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBnC,OAArB,CAAX,CAArB;AACA,wBACI,oBAAC,SAAD;AACI,MAAA,GAAG,EAAE,KAAKM,SADd;AAEI,MAAA,WAAW,EAAE,EAFjB;AAGI,MAAA,aAAa,EAAE;AAAEW,QAAAA,GAAF;AAAOE,QAAAA,GAAG,EAAED;AAAZ,OAHnB;AAII,MAAA,SAAS,EAAE,KAAKR,YAJpB;AAKI,MAAA,aAAa,EAAE,KAAKA,YALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOK,KAAKK,KAAL,CAAWqB,KAAX,CAAiB5B,GAAjB,CAAsB6B,IAAD,iBAAU,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAEA,IAApB;AAA0B,MAAA,GAAG,EAAEA,IAAI,CAACC,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B,CAPL,CADJ;AAWH;;AAzCmC;;AA4CxC,MAAMC,SAAS,GAAGtC,YAAY,CAACC,aAAa,CAACG,eAAD,CAAd,CAA9B;AACA,eAAekC,SAAf","sourcesContent":["\nimport React, {Component} from 'react';\nimport { POS_KEY } from '../constants';\n\nimport {\n    withScriptjs,\n    withGoogleMap,\n    GoogleMap,\n} from \"react-google-maps\";\n\nimport AroundMarker from './AroundMarker';\n\nclass NormalAroundMap extends Component {\n\n    getMapRef = (mapInstance) => {\n        this.map = mapInstance;\n        window.map = mapInstance;\n    }\n\n    reloadMarker = () => {\n        const center = this.getCenter();\n        const radius = this.getRadius();\n        this.props.loadPostsByTopic(center, radius);\n    }\n\n    getCenter() {\n        const center = this.map.getCenter();\n        return { lat: center.lat(), lon: center.lng() };\n    }\n\n    getRadius() {\n        const center = this.map.getCenter();\n        const bounds = this.map.getBounds();\n        if (center && bounds) {\n            const ne = bounds.getNorthEast();\n            const right = new window.google.maps.LatLng(center.lat(), ne.lng());\n            return 0.001 * window.google.maps.geometry.spherical.computeDistanceBetween(center, right);\n        }\n    }\n\n    render() {\n        const { lat, lon } = JSON.parse(localStorage.getItem(POS_KEY));\n        return (\n            <GoogleMap\n                ref={this.getMapRef}\n                defaultZoom={11}\n                defaultCenter={{ lat, lng: lon }}\n                onDragEnd={this.reloadMarker}\n                onZoomChanged={this.reloadMarker}\n            >\n                {this.props.posts.map((post) => <AroundMarker post={post} key={post.url} />)}\n            </GoogleMap>\n        );\n    }\n}\n\nconst AroundMap = withScriptjs(withGoogleMap(NormalAroundMap));\nexport default AroundMap;\n"]},"metadata":{},"sourceType":"module"}